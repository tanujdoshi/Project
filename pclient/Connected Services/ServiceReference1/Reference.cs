//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace pclient.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/register", ReplyAction="http://tempuri.org/IService/registerResponse")]
        void register(string s1, string s2, string s3, string pname, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/register", ReplyAction="http://tempuri.org/IService/registerResponse")]
        System.Threading.Tasks.Task registerAsync(string s1, string s2, string s3, string pname, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/login", ReplyAction="http://tempuri.org/IService/loginResponse")]
        bool login(string s1, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/login", ReplyAction="http://tempuri.org/IService/loginResponse")]
        System.Threading.Tasks.Task<bool> loginAsync(string s1, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/flogin", ReplyAction="http://tempuri.org/IService/floginResponse")]
        bool flogin(string s1, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/flogin", ReplyAction="http://tempuri.org/IService/floginResponse")]
        System.Threading.Tasks.Task<bool> floginAsync(string s1, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/projectdetail", ReplyAction="http://tempuri.org/IService/projectdetailResponse")]
        void projectdetail(string filename, string description, string subdate, string approve, int uid, string tid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/projectdetail", ReplyAction="http://tempuri.org/IService/projectdetailResponse")]
        System.Threading.Tasks.Task projectdetailAsync(string filename, string description, string subdate, string approve, int uid, string tid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getuser", ReplyAction="http://tempuri.org/IService/getuserResponse")]
        string getuser(string a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getuser", ReplyAction="http://tempuri.org/IService/getuserResponse")]
        System.Threading.Tasks.Task<string> getuserAsync(string a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getprojectdata", ReplyAction="http://tempuri.org/IService/getprojectdataResponse")]
        System.Data.DataTable getprojectdata(int a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getprojectdata", ReplyAction="http://tempuri.org/IService/getprojectdataResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> getprojectdataAsync(int a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getproject", ReplyAction="http://tempuri.org/IService/getprojectResponse")]
        System.Data.DataSet getproject();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getproject", ReplyAction="http://tempuri.org/IService/getprojectResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> getprojectAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getdetailproject", ReplyAction="http://tempuri.org/IService/getdetailprojectResponse")]
        System.Data.DataSet getdetailproject(int a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getdetailproject", ReplyAction="http://tempuri.org/IService/getdetailprojectResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> getdetailprojectAsync(int a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/gettask", ReplyAction="http://tempuri.org/IService/gettaskResponse")]
        string gettask(string a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/gettask", ReplyAction="http://tempuri.org/IService/gettaskResponse")]
        System.Threading.Tasks.Task<string> gettaskAsync(string a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getfaculty", ReplyAction="http://tempuri.org/IService/getfacultyResponse")]
        string getfaculty(string a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getfaculty", ReplyAction="http://tempuri.org/IService/getfacultyResponse")]
        System.Threading.Tasks.Task<string> getfacultyAsync(string a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getusername", ReplyAction="http://tempuri.org/IService/getusernameResponse")]
        string getusername(string a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getusername", ReplyAction="http://tempuri.org/IService/getusernameResponse")]
        System.Threading.Tasks.Task<string> getusernameAsync(string a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/updateprojectdata", ReplyAction="http://tempuri.org/IService/updateprojectdataResponse")]
        void updateprojectdata(string approve, string uid, string fid, string tid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/updateprojectdata", ReplyAction="http://tempuri.org/IService/updateprojectdataResponse")]
        System.Threading.Tasks.Task updateprojectdataAsync(string approve, string uid, string fid, string tid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/taskuploaded", ReplyAction="http://tempuri.org/IService/taskuploadedResponse")]
        bool taskuploaded(string uid, string tid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/taskuploaded", ReplyAction="http://tempuri.org/IService/taskuploadedResponse")]
        System.Threading.Tasks.Task<bool> taskuploadedAsync(string uid, string tid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getupdateddata", ReplyAction="http://tempuri.org/IService/getupdateddataResponse")]
        System.Data.DataSet getupdateddata(int uid, int tid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getupdateddata", ReplyAction="http://tempuri.org/IService/getupdateddataResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> getupdateddataAsync(int uid, int tid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/updatepuser", ReplyAction="http://tempuri.org/IService/updatepuserResponse")]
        void updatepuser(string uid, string tid, string fname, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/updatepuser", ReplyAction="http://tempuri.org/IService/updatepuserResponse")]
        System.Threading.Tasks.Task updatepuserAsync(string uid, string tid, string fname, string description);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : pclient.ServiceReference1.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<pclient.ServiceReference1.IService>, pclient.ServiceReference1.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void register(string s1, string s2, string s3, string pname, string password) {
            base.Channel.register(s1, s2, s3, pname, password);
        }
        
        public System.Threading.Tasks.Task registerAsync(string s1, string s2, string s3, string pname, string password) {
            return base.Channel.registerAsync(s1, s2, s3, pname, password);
        }
        
        public bool login(string s1, string password) {
            return base.Channel.login(s1, password);
        }
        
        public System.Threading.Tasks.Task<bool> loginAsync(string s1, string password) {
            return base.Channel.loginAsync(s1, password);
        }
        
        public bool flogin(string s1, string password) {
            return base.Channel.flogin(s1, password);
        }
        
        public System.Threading.Tasks.Task<bool> floginAsync(string s1, string password) {
            return base.Channel.floginAsync(s1, password);
        }
        
        public void projectdetail(string filename, string description, string subdate, string approve, int uid, string tid) {
            base.Channel.projectdetail(filename, description, subdate, approve, uid, tid);
        }
        
        public System.Threading.Tasks.Task projectdetailAsync(string filename, string description, string subdate, string approve, int uid, string tid) {
            return base.Channel.projectdetailAsync(filename, description, subdate, approve, uid, tid);
        }
        
        public string getuser(string a) {
            return base.Channel.getuser(a);
        }
        
        public System.Threading.Tasks.Task<string> getuserAsync(string a) {
            return base.Channel.getuserAsync(a);
        }
        
        public System.Data.DataTable getprojectdata(int a) {
            return base.Channel.getprojectdata(a);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> getprojectdataAsync(int a) {
            return base.Channel.getprojectdataAsync(a);
        }
        
        public System.Data.DataSet getproject() {
            return base.Channel.getproject();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getprojectAsync() {
            return base.Channel.getprojectAsync();
        }
        
        public System.Data.DataSet getdetailproject(int a) {
            return base.Channel.getdetailproject(a);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getdetailprojectAsync(int a) {
            return base.Channel.getdetailprojectAsync(a);
        }
        
        public string gettask(string a) {
            return base.Channel.gettask(a);
        }
        
        public System.Threading.Tasks.Task<string> gettaskAsync(string a) {
            return base.Channel.gettaskAsync(a);
        }
        
        public string getfaculty(string a) {
            return base.Channel.getfaculty(a);
        }
        
        public System.Threading.Tasks.Task<string> getfacultyAsync(string a) {
            return base.Channel.getfacultyAsync(a);
        }
        
        public string getusername(string a) {
            return base.Channel.getusername(a);
        }
        
        public System.Threading.Tasks.Task<string> getusernameAsync(string a) {
            return base.Channel.getusernameAsync(a);
        }
        
        public void updateprojectdata(string approve, string uid, string fid, string tid) {
            base.Channel.updateprojectdata(approve, uid, fid, tid);
        }
        
        public System.Threading.Tasks.Task updateprojectdataAsync(string approve, string uid, string fid, string tid) {
            return base.Channel.updateprojectdataAsync(approve, uid, fid, tid);
        }
        
        public bool taskuploaded(string uid, string tid) {
            return base.Channel.taskuploaded(uid, tid);
        }
        
        public System.Threading.Tasks.Task<bool> taskuploadedAsync(string uid, string tid) {
            return base.Channel.taskuploadedAsync(uid, tid);
        }
        
        public System.Data.DataSet getupdateddata(int uid, int tid) {
            return base.Channel.getupdateddata(uid, tid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getupdateddataAsync(int uid, int tid) {
            return base.Channel.getupdateddataAsync(uid, tid);
        }
        
        public void updatepuser(string uid, string tid, string fname, string description) {
            base.Channel.updatepuser(uid, tid, fname, description);
        }
        
        public System.Threading.Tasks.Task updatepuserAsync(string uid, string tid, string fname, string description) {
            return base.Channel.updatepuserAsync(uid, tid, fname, description);
        }
    }
}
